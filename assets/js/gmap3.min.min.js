(function($,window,document){"use strict";var gm,services={},loadOptions,when=$.when,extend=$.extend,isArray=$.isArray,isFunction=$.isFunction,deferred=$.Deferred;function dupOpts(options){return extend(true,{},options||{})}function slice(){var fn=Array.prototype.slice,args=fn.call(arguments,1);return fn.apply(arguments[0],args)}function isUndefined(value){return typeof value==="undefined"}function all(deferreds){return when.apply($,deferreds)}function resolved(value){return when().then(function(){return value})}function distanceInMeter(origin,destination){var m=Math,pi=m.PI,e=pi*origin.lat()/180,f=pi*origin.lng()/180,g=pi*destination.lat()/180,h=pi*destination.lng()/180,cos=m.cos,sin=m.sin;return 1e3*6371*m.acos(m.min(cos(e)*cos(g)*cos(f)*cos(h)+cos(e)*sin(f)*cos(g)*sin(h)+sin(e)*sin(g),1))}function ready(fn){if(document.readyState!="loading"){fn()}else{document.addEventListener("DOMContentLoaded",fn)}}function serialize(obj){return objectKeys(obj).map(function(key){return encodeURIComponent(key)+"="+encodeURIComponent(obj[key])}).join("&")}when(function(){var dfd=deferred(),cbName="__gmap3",script;$.holdReady(true);ready(function(){if(window.google&&window.google.maps||loadOptions===false){dfd.resolve()}else{window[cbName]=function(){delete window[cbName];dfd.resolve()};script=document.createElement("script");script.type="text/javascript";script.src="https://maps.googleapis.com/maps/api/js?callback="+cbName+(loadOptions?"&"+(typeof loadOptions==="string"?loadOptions:serialize(loadOptions)):"");$("head").append(script)}});return dfd}()).then(function(){$.holdReady(false)});function service(name){if(!services[name]){services[name]=gmElement(name)}return services[name]}function gmElement(name){var cls=gm[name];function F(args){return cls.apply(this,args)}F.prototype=cls.prototype;return new F(slice(arguments,1))}function geocode(request){var dfd=deferred();if(typeof request==="string"){request={address:request}}service("Geocoder").geocode(request,function(results,status){if(status===gm.GeocoderStatus.OK){dfd.resolve(results[0].geometry.location)}else{dfd.reject(status)}});return dfd}function foreachStr(str,fn){foreach(str.split(" "),fn)}function foreach(items,fn){(isArray(items)?items:[items]).forEach(fn)}function objectKeys(obj){return Object.keys(obj)}function objectValues(obj){return objectKeys(obj).map(function(key){return obj[key]})}function resolveLatLngBounds(options,fn){options=dupOpts(options);if(options.bounds){options.bounds=toLatLngBound(options.bounds)}return resolved(fn(options))}function resolveLatLng(options,key,fn){var dfd=deferred();options=dupOpts(options);when().then(function(){var address=options.address;if(address){delete options.address;return geocode(address).then(function(latLng){options[key]=latLng})}options[key]=toLatLng(options[key])}).then(function(){dfd.resolve(fn(options))}).fail(function(reason){dfd.reject(reason)});return dfd}function resolveArrayOfLatLng(options,key,fn){options=dupOpts(options);options[key]=(options[key]||[]).map(toLatLng);return resolved(fn(options))}function toLatLng(mixed,convertLiteral){return isArray(mixed)?new gm.LatLng(mixed[0],mixed[1]):convertLiteral&&mixed&&!(mixed instanceof gm.LatLng)?new gm.LatLng(mixed.lat,mixed.lng):mixed}function toLatLngBound(mixed,convertLiteral){if(isArray(mixed)){return new gm.LatLngBounds({lat:mixed[2],lng:mixed[3]},{lat:mixed[0],lng:mixed[1]})}else if(convertLiteral&&!mixed.getCenter){return new gm.LatLngBounds({lat:mixed.south,lng:mixed.west},{lat:mixed.north,lng:mixed.east})}return mixed}function createOverlayView(map,options){var GMOverlayView=gm.OverlayView;var $div=$(document.createElement("div")).css({border:"none",borderWidth:0,position:"absolute"}).append(options.content);options=extend({x:0,y:0},options);if(options.position){options.position=toLatLng(options.position,true)}else if(options.bounds){options.bounds=toLatLngBound(options.bounds,true)}function OverlayView(){var self=this,listeners=[];GMOverlayView.call(self);self.setMap(map);function fromLatLngToDivPixel(latlng){return self.getProjection().fromLatLngToDivPixel(latlng)}self.onAdd=function(){var panes=self.getPanes();panes.overlayMouseTarget.appendChild($div[0])};if(options.position){self.getPosition=function(){return options.position};self.setPosition=function(latlng){options.position=latlng;self.draw()};self.draw=function(){var ps=fromLatLngToDivPixel(options.position);$div.css({left:ps.x+options.x+"px",top:ps.y+options.y+"px"})}}else{self.getBounds=function(){return options.bounds};self.setBounds=function(bounds){options.bounds=bounds;self.draw()};self.draw=function(){var sw=fromLatLngToDivPixel(options.bounds.getSouthWest());var ne=fromLatLngToDivPixel(options.bounds.getNorthEast());$div.css({left:sw.x+options.x+"px",top:ne.y+options.y+"px",width:ne.x-sw.x+options.x+"px",height:sw.y-ne.y+options.y+"px"})}}self.onRemove=function(){listeners.map(function(handler){gm.event.removeListener(handler)});$div.remove();self.$=$div=null};self.$=$div}OverlayView.prototype=new GMOverlayView;return new OverlayView}function getProjection(map){function Overlay(){var self=this;self.onAdd=self.onRemove=self.draw=function(){};return gm.OverlayView.call(self)}Overlay.prototype=new gm.OverlayView;var overlay=new Overlay;overlay.setMap(map);return overlay.getProjection()}function ClusterOverlay(cluster,markers,overlay,bounds){var self=this;self.cluster=cluster;self.markers=markers;self.$=overlay.$;self.overlay=overlay;overlay.getBounds=function(){return gmElement("LatLngBounds",bounds.getSouthWest(),bounds.getNorthEast())}}function Cluster(map,options){var timer,igniter,previousViewHash,projection,filter,self=this,markers=[],radius=(options.size||200)>>1,enabled=true,overlays={},handlers=[];options=options||{};options.markers=options.markers||[];self._b=function(fn){fn(objectValues(overlays));handlers.push(fn)};self.markers=function(){return slice(markers)};self.groups=function(){return objectValues(overlays)};self.enable=function(){if(!enabled){enabled=true;previousViewHash="";delayRedraw()}};self.disable=function(){if(enabled){enabled=false;previousViewHash="";delayRedraw()}};self.add=function(marker){markers.push(marker);previousViewHash="";delayRedraw()};self.remove=function(marker){markers=markers.filter(function(item){return item!==marker});previousViewHash="";delayRedraw()};self.filter=function(fn){if(filter!==fn){filter=fn;previousViewHash="";delayRedraw()}};function extendsMapBounds(){var circle=gmElement("Circle",{center:map.getCenter(),radius:1.15*distanceInMeter(map.getCenter(),map.getBounds().getNorthEast())});return circle.getBounds()}function extendsBounds(latLng){var p=projection.fromLatLngToDivPixel(latLng);return gmElement("LatLngBounds",projection.fromDivPixelToLatLng(gmElement("Point",p.x-radius,p.y+radius)),projection.fromDivPixelToLatLng(gmElement("Point",p.x+radius,p.y-radius)))}options.markers.map(function(opts){opts.position=toLatLng(opts.position);markers.push(gmElement("Marker",opts))});function redraw(){var keys,bounds,overlayOptions,hash,currentMarkers,viewHash,zoom=map.getZoom(),currentHashes={},newOverlays=[],ignore={};viewHash=""+zoom;if(zoom>3){bounds=extendsMapBounds();foreach(markers,function(marker,index){if(!bounds.contains(marker.getPosition())){viewHash+="-"+index;ignore[index]=true;if(marker.getMap()){marker.setMap(null)}}})}if(filter){foreach(markers,function(marker,index){if(!ignore[index]&&!filter(marker)){viewHash+="-"+index;ignore[index]=true;if(marker.getMap()){marker.setMap(null)}}})}if(viewHash===previousViewHash){return}previousViewHash=viewHash;foreach(markers,function(marker,index){if(ignore[index]){return}keys=[index];bounds=extendsBounds(marker.getPosition());if(enabled){foreach(slice(markers,index+1),function(marker,idx){idx+=index+1;if(!ignore[idx]&&bounds.contains(marker.getPosition())){keys.push(idx);ignore[idx]=true}})}hash=keys.join("-");currentHashes[hash]=true;if(overlays[hash]){return}currentMarkers=keys.map(function(key){return markers[key]});overlayOptions=options.cb(slice(currentMarkers));if(overlayOptions){bounds=gmElement("LatLngBounds");foreach(currentMarkers,function(marker){bounds.extend(marker.getPosition());if(marker.getMap()){marker.setMap(null)}});overlayOptions=dupOpts(overlayOptions);overlayOptions.position=bounds.getCenter();overlays[hash]=new ClusterOverlay(self,slice(currentMarkers),createOverlayView(map,overlayOptions),bounds);newOverlays.push(overlays[hash])}else{foreach(currentMarkers,function(marker){if(!marker.getMap()){marker.setMap(map)}})}});foreach(objectKeys(overlays),function(key){if(!currentHashes[key]){overlays[key].overlay.setMap(null);delete overlays[key]}});if(newOverlays.length){foreach(handlers,function(fn){fn(newOverlays)})}}function delayRedraw(){clearTimeout(timer);timer=setTimeout(redraw,100)}function init(){gm.event.addListener(map,"zoom_changed",delayRedraw);gm.event.addListener(map,"bounds_changed",delayRedraw);redraw()}igniter=setInterval(function(){projection=getProjection(map);if(projection){clearInterval(igniter);init()}},10)}$.gmap3=function(options){loadOptions=options};$.fn.gmap3=function(options){var items=[];gm=window.google.maps;this.each(function(){var $this=$(this),gmap3=$this.data("gmap3");if(!gmap3){gmap3=new Gmap3($this,options);$this.data("gmap3",gmap3)}items.push(gmap3)});return new Handler(this,items)};function Handler(chain,items){var self=this;objectKeys(items[0]).forEach(function(name){self[name]=function(){var results=[],args=slice(arguments);items.forEach(function(item){results.push(item[name].apply(item,args))});return name==="get"?results.length>1?results:results[0]:self}});self.$=chain}function Gmap3($container,options){var map,previousResults=[],promise=when(),self=this;function context(){return{$:$container,get:self.get}}function attachEvents(events,instances,args,once){var hasArgs=arguments.length>3;if(!hasArgs){once=args}$.each(events,function(eventName,handlers){foreach(instances,function(instance){var isClusterOverlay=instance instanceof ClusterOverlay;var isDom=isClusterOverlay||instance instanceof gm.OverlayView;var eventListener=isDom?instance.$.get(0):instance;gm.event["add"+(isDom?"Dom":"")+"Listener"+(once?"Once":"")](eventListener,eventName,function(event){foreach(handlers,function(handler){if(isFunction(handler)){if(isClusterOverlay){handler.call(context(),undefined,instance,instance.cluster,event)}else if(hasArgs){var buffer=slice(args);buffer.unshift(instance);buffer.push(event);handler.apply(context(),buffer)}else{handler.call(context(),instance,event)}}})})})})}function multiple(fn){return function(options){if(isArray(options)){var instances=[];var promises=options.map(function(opts){return fn.call(self,opts).then(function(instance){instances.push(instance)})});return all(promises).then(function(){previousResults.push(instances);return instances})}else{return fn.apply(self,arguments).then(function(instance){previousResults.push(instance);return instance})}}}function chainToPromise(fn){return function(){var args=slice(arguments);promise=promise.then(function(instance){if(isFunction(args[0])){return when(args[0].call(context(),instance)).then(function(value){args[0]=value;return fn.apply(self,args)})}return when(fn.apply(self,args))});return promise}}self.map=chainToPromise(function(options){return map||resolveLatLng(options,"center",function(opts){map=gmElement("Map",$container.get(0),opts);previousResults.push(map);return map})});foreachStr("Marker:position Circle:center InfoWindow:position:0 Polyline:path Polygon:paths",function(item){item=item.split(":");var property=item[1]||"";self[item[0].toLowerCase()]=chainToPromise(multiple(function(options){return(property.match(/^path/)?resolveArrayOfLatLng:resolveLatLng)(options,property,function(opts){if(item[2]!=="0"){opts.map=map}return gmElement(item[0],opts)})}))});foreachStr("TrafficLayer TransitLayer BicyclingLayer",function(item){self[item.toLowerCase()]=chainToPromise(function(){var instance=gmElement(item);previousResults.push(instance);instance.setMap(map);return instance})});self.kmllayer=chainToPromise(multiple(function(options){options=dupOpts(options);options.map=map;return when(gmElement("KmlLayer",options))}));self.rectangle=chainToPromise(multiple(function(options){return resolveLatLngBounds(options,function(opts){opts.map=map;return gmElement("Rectangle",opts)})}));self.overlay=chainToPromise(multiple(function(options){function fn(opts){return createOverlayView(map,opts)}options=dupOpts(options);return options.bounds?resolveLatLngBounds(options,fn):resolveLatLng(options,"position",fn)}));self.groundoverlay=chainToPromise(function(url,bounds,options){return resolveLatLngBounds({bounds:bounds},function(opts){options=dupOpts(options);options.map=map;var instance=gmElement("GroundOverlay",url,opts.bounds,options);previousResults.push(instance);return instance})});self.styledmaptype=chainToPromise(function(styleId,styles,options){var instance=gmElement("StyledMapType",styles,options);previousResults.push(instance);map.mapTypes.set(styleId,instance);return instance});self.streetviewpanorama=chainToPromise(function(container,options){return resolveLatLng(options,"position",function(opts){var instance=gmElement("StreetViewPanorama",$(container).get(0),opts);map.setStreetView(instance);previousResults.push(instance);return instance})});self.route=chainToPromise(function(options){var dfd=deferred();options=dupOpts(options);options.origin=toLatLng(options.origin);options.destination=toLatLng(options.destination);service("DirectionsService").route(options,function(results,status){previousResults.push(results);dfd.resolve(status===gm.DirectionsStatus.OK?results:false)});return dfd});self.cluster=chainToPromise(function(options){var cluster=new Cluster(map,dupOpts(options));previousResults.push(cluster);return resolved(cluster)});self.directionsrenderer=chainToPromise(function(options){var instance;if(options){options=dupOpts(options);options.map=map;if(options.panel){options.panel=$(options.panel).get(0)}instance=gmElement("DirectionsRenderer",options)}previousResults.push(instance);return instance});self.latlng=chainToPromise(multiple(function(options){return resolveLatLng(options,"latlng",function(opts){previousResults.push(opts.latlng);return opts.latlng})}));self.fit=chainToPromise(function(){var bounds=gmElement("LatLngBounds");foreach(previousResults,function(instances){if(instances!==map){foreach(instances,function(instance){if(instance){if(instance.getPosition&&instance.getPosition()){bounds.extend(instance.getPosition())}else if(instance.getBounds&&instance.getBounds()){bounds.extend(instance.getBounds().getNorthEast());bounds.extend(instance.getBounds().getSouthWest())}else if(instance.getPaths&&instance.getPaths()){foreach(instance.getPaths().getArray(),function(path){foreach(path.getArray(),function(latLng){bounds.extend(latLng)})})}else if(instance.getPath&&instance.getPath()){foreach(instance.getPath().getArray(),function(latLng){bounds.extend(latLng)})}else if(instance.getCenter&&instance.getCenter()){bounds.extend(instance.getCenter())}}})}});if(!bounds.isEmpty()){map.fitBounds(bounds)}return true});self.wait=function(duration){promise=promise.then(function(instance){var dfd=deferred();setTimeout(function(){dfd.resolve(instance)},duration);return dfd})};self.then=function(fn){if(isFunction(fn)){promise=promise.then(function(instance){return when(fn.call(context(),instance)).then(function(newInstance){return isUndefined(newInstance)?instance:newInstance})})}};self.catch=function(fn){if(isFunction(fn)){promise=promise.then(null,function(reason){return when(fn.call(context(),reason))})}};foreachStr("on once",function(name,once){self[name]=function(){var events=arguments[0];if(events){if(typeof events==="string"){events={};events[arguments[0]]=slice(arguments,1)}promise.then(function(instances){if(instances){if(instances instanceof Cluster){instances._b(function(items){if(items&&items.length){attachEvents(events,items,once)}});return attachEvents(events,instances.markers(),[undefined,instances],once)}attachEvents(events,instances,once)}})}}});self.get=function(index){if(isUndefined(index)){return previousResults.map(function(instance){return isArray(instance)?instance.slice():instance})}else{if(index<0){index=previousResults.length+index}return isArray(previousResults[index])?previousResults[index].slice():previousResults[index]}};if(options){self.map(options)}}})(jQuery,window,document);